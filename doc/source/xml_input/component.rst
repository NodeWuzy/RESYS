---------------
水动力学部件
---------------


这一部分主要讨论水力学部件的输入设计。RESYS中的水力学部件信息，主要包括控制体和接管三大类：控制体、接管、控制体与接管的组合。
所谓的控制体，是流体占据的体积，是实际存在的。而接管则用于连接控制体，实际上是不存在的，接管的作用在于划分计算网格。
在使用交叉网格离散控制方程时，控制体用于存储压力、温度、空泡份额等标量场信息，而接管用于存储流速、质量流密度等矢量场信息。
但是由于RESYS程序使用一维的模型，这里所说的矢量，事实上和标量一样，都只有一个分量。

在RESYS中，控制体的种类包括 **单一控制体** (singleVolume)和 **时间相关控制体** (timeDependentVolume)。
而接管部件包括三类： **单一接管** (junction)、 **时间相关接管** (timeDependentJunction)。
其他的一些包含控制体的部件，如 **管型部件** (pipe)、**分支部件** (branch)、**分支控制体部件** (volumeBranch)可以看作是控制体和接管的组合。

本节主要讨论这些水力学部件模型的输入。


单一控制体
=============
单一控制体是RESYS程序中一个最为基本的控制体单元，流体从单一控制体的入口流入，并从出口流出。
流体在单一控制体中流动时，因为受到壁面的摩擦阻力而产生压降，受到与控制体连接的壁面传热而发生热量交换。
单一控制体也可以使用只含有一个控制体的管型部件来描述。但是单一控制体所需要的输入量小于管型部件的输入。
但是当一个控制体需要再细分为多个控制体时，使用管型部件是方便的。

单一控制体在xml文件中使用标签 ``<singleVolume/>`` 来表示。下面介绍单一控制体的输入：

.. code-block:: xml

    <singleVolume
      name           = "singleVolume1"
      start_position = "0  0  0"
      orientations   = "1  0  0"
      area           = "3.14159"
      length         = "1.00000"
      volume         = "3.14159"
      Dh             = "1.00000"
      roughness      = "1.0E-6"
    />

下面给出上面单一控制体的输入标签中每一个属性的意义：

- ``name``  :  控制体的名称，这个会在接管的连接中用到，控制体的名称里面不能包含字符 ``.``
- ``start_position``  :  控制体入口的起始位置，三个坐标分量分别为x、y、z，单位(m)。
- ``orientations``    :  控制体的朝向，定义为入口指向出口的方向向量。
- ``area``            :  控制体的流动面积
- ``length``          ： 控制体的长度，单位(m) 
- ``volume``          ： 控制体的体积
- ``Dh``              ： 控制体的水力直径
- ``roughness``       ： 控制体的表面粗超度，单位(m)

.. note::
   在上面的关于几何信息的输入中 :class:`area` 、 :class:`length` 、:class:`volume` 中只需要输入两个参数就足够了，在程序中第三个参数可以从另外两个参数中推断出来。
   如果输入了三个参数，程序会检查 ``volume = area * length`` 是否成立， 如果不成立，那么就会输出错误信息。如果这三个参数中只输入参了一个数，
   程序也会输入错误信息。
   
   :class:`roughness` 是一个可选参数，如果不输入，程序会给其一个默认值0.0。roughness 不能大于 :math:`\frac{Dh}{2}`。

   :class:`Dh` 也是一个可选参数，如果不输入,程序便会给其一个默认值 :math:`2(\frac{area}{\pi})^{0.5}`.。

对于单一控制体，所需要输入的最少的信息如下：

.. code-block:: xml

    <singleVolume
      name           = "singleVolume1"
      start_position = "0  0  0"
      orientations   = "1  0  0"
      area           = "3.14159"
      length         = "1.00000"
    />


单一接管
========
单一接管是RESYS程序中的一个最基本的流体动力学单元。
单一接管用于连接两个部件的入口或出口，单一接管可以连接单一控制体的入口或者出口以及侧面、管型部件的入口或者出口、时间相关控制体的出口。
因此单一接管是一个定义控制体连接的部件。
流体流过接管，可能会遇到一个突然的形阻压降，例如截面突然扩大或者缩小或者管道转弯处。
因此接管的一个重要的功能是要考虑这类形状阻力导致的压降的计算。

单一接管的输入需要指定接管的基本几何信息和连接信息。
对于单一接管的连接信息，需要指定连接到的部件名和连接到的是入口还是出口。
如果单一接管连接到某一部件的入口，其输入的的方式为 ``连接部件名.in`` 。
如果单一接管连接到某一部件的出口，其输入方式为 ``连接部件名.out`` 。
如果单一接管连接到某一部件的侧面，其输入方式是 ``连接部件名.side``

由于RESYS使用一维的流动模型，因此每一个单一控制体在流动方向上会有入口和出口两个面。
单一接管k可以连接控制体的入口和出口两个面构成一维的管网模型。
但是在使用一维模型在模拟一些多维的流动现象时会遇到困难。
因此，单一接管也可以连接到控制体的侧面，构成一个 ``横流接管`` ，在一定程度上可以解决模拟多维流动的困难。
``普通接管`` 描述的流动问题的动量方程守恒具有完整的对流项，而 ``横流接管`` 描述的动量守恒方程的对流项是缺失或者不完全的。
横流接管又可以分为  ``T横流接管``  和  ``II横流接管``。

``T横流接管``  的动量方程的对流项是不完全的，其通常用于描述一个单一控制体的流体从侧面垂直汇入另一个单一控制体。

``II横流接管`` 的动量方程的对流项是缺失的，其用于描述两个平行流动的单一控制体之间的横流。

下面介绍了单一接管的输入

.. code-block:: xml

    <junction
      name   = "singleJunction1"
      input  = "singleVolume1.in"
      output = "singleVolume2.in"
      abrupt_area_change = "true"
      area   = "2.5"
      AF="0.0" BF="0.0" CF="0.0"
      AR="0.0" BR="0.0" CR="0.0"
    />

下面给出上面单一接管的输入标签中每一个属性的意义：

- ``name``               :  接管的名称
- ``input``              :  用于指定接管的入口连接的控制体的出口或者入口。
- ``output``             :  用于指定接管的出口连接的控制体的出口或者入口。
- ``abrupt_area_change`` ： :class:`bool` 变量，是否使用截面突然扩大或者缩小模型
- ``area``               ： 接管的流动面积
- ``AF、BF、CF``         ： 定义由接管入口流向接管出口时的形状阻力压降计算系数
- ``AR、BR、CR``         ： 定义由接管出口流向接管入口时的形状阻力压降计算系数
- ``DF``: 与入口相连的控制体的等效长度
- ``DR``: 与出口相连的控制体的等效长度
- ``F_convection:``:class:`bool` 变量，在该接管上是否计算入口端的动量方程对流项
- ``R_convection:``:class:`bool` 变量，在该接管上是否计算出口端的动量方程对流项
- ``F_friction:``  :class:`bool` 变量，在该接管上是否计算入口端的摩擦阻力项
- ``R_friction:``  :class:`bool` 变量，在该接管上是否计算出口端的摩擦阻力项

.. note::

   1. 当从接管的入口流向接管的出口时，接管的流速或者流量定义为正。否则接管的流速或者流量定义为负。
   
   2. :class:`abrupt_area_change` 是一个可选参数，如果不输入，程序会给其一个默认值 ``false`` 。

   3. :class:`area` 也是一个可选参数，如果不输入,程序便会给其一个默认值，该值为该接管连接的两个控制体流动面积的最小值。
      但是对于横流接管，面积是必须要输入的参数，因为此时程序不能合理的推断出接管的流动面积。
   
   4. :class:`AF、BF、CF`  和 :class:`AR、BR、CR` 都是可选参数，如果不输入的话，程序会给其一个默认值 ``0.0`` 。
      但是对于 :class:`横流接管` ，为了考虑横流接管的形阻系数，这些参数在一般情况下都是输入的。

   5. 单一接管不能接入到分支部件，分支部件的连接数据只能在分支部件内部定义。
   
   6. :class:`DF` 与 :class:`DR` 是可选的输入参数，如果这些项不输入的话，程序将自动推断出一个值。
      对于连接到控制体入口或者出口的接口，其对应的值为控制体的长度 ``length`` 。
      对于连接到控制体侧面的接口，其对应的值为控制体的水力直径 ``Dh`` 。
   
   7. :class:`F_convection` 、 :class:`R_convection` ，是可选的输入项。当它们不输入时程序会自动推断它们的值。
      对于连接到控制体入口或者出口的接口，该值为 ``true`` , 表示计算该侧动量方程对流项。
      对于连接到控制体的侧面的接口，该值为 ``false`` , 表示不计算该侧动量方程对流项。
 
   8. :class:`F_friction` 、 :class:`R_friction` ，是可选的输入项。当它们不输入时程序会自动推断它们的值。
      对于连接到控制体入口或者出口的接口，该值为 ``true`` , 表示计算该侧动量方程壁面摩擦项。
      对于连接到控制体的侧面的接口，该值为 ``false`` , 表示不计算该侧动量方程壁面摩擦项。


.. caution::
   程序会将突阔突缩模型计算出的形阻系数和使用上面系数计算出的形阻系数相加。
   因此同时指定使用突阔突缩模型和形状阻力压降计算系数时一定要仔细检查模型的合理性。

   当多个接管连接到同一个控制体的入口或者出口时，请为每一个接管指定面积，这时程序不能合理的推断出接管的面积。
      

因此输入一个接管所需要的最少的输入数据如下：

.. code-block:: xml

    <junction
      name   = "singleJunction1"
      input  = "singleVolume1.in"
      output = "singleVolume2.in"
    />

对于横流接管必须要指定面积，下面演示了要构建一个 ``II横流接管`` 所需要的最少的输入参数：

.. code-block:: xml

    <junction
      name   = "crossflowJunction2"
      input  = "singleVolume1.side"
      output = "singleVolume2.side"
      area   = "2.5"
    />

管型部件
========

在RESYE中 ``管型部件`` 是一个为了方便输入而定义的部件。
一个含有N个控制体的管型部件等价于N个单一控制体加上N-1个单一接管。
因此含有N个控制体一个管型部件内部含有N-1个内部接管。
管型部件的输入需要指定内部N个单一控制体和N-1个单一接管的信息。
一个管型部件的示意图如下，其既可以表示圆管，也可以表示非规则截面的管型部件。

.. image:: /_static/pipe.png
   :height: 215px
   :width:  500px
   :align: center



下面是一个最简易的管型部件的输入，管型部件在输入文件中使用  ``pipe`` 标签指定：

.. code-block:: xml

    <pipe
      name           = "pipe1"
      start_position = "0  0  0"
      orientations   = "0  1  0"
      pipe_area      = "3.14"
      pipe_length    = "10.0"
      n_elems        = "5"
    />

上面的输入定义了一个长度为10米，面积为3.14平方米的管道模型，并将其等长度划分为5
个单一控制体，单一控制体的水力直径和表面粗糙度设定为前面所述的默认值。


当然，管型部件的输入可以更加详细。
通过如下的输入，可以指定一个每个控制体的流动面积不同，并且长度也不相同的管型部件。

.. code-block:: xml

    <pipe
      name           = "pipe1"
      start_position = "0  0  0"
      orientations   = "0  1  0"
      cell_area      = "3.0  3.1  3.2  3.3  3.4"
      cell_length    = "1.7  1.8  1.9  2.0  2.1"
      n_elems        = "5"
    />



.. note::

    在上面的输入中，内部接管的面积按照相邻控制体的最小的流动面积设置默认值。
    
    :class:`cell_area` 属性接受一个和控制体数目等长度的数组，其第一个数对应于入口
    的第一个控制体的参数，:class:`pipe_area` 接受一个常数，其指定每一个控制体的面积
    均为该值。这两个参数只能输入一个，如果两个均输入，则发生矛盾，程序会输出错误信息。

    对于 :class:`pipe_length` 属性和 :class:`cell_length` 属性也是类似。

当输入中需要指定控制体的水力直径或者表面粗糙度时，也会有简略和详细两种输入方式。

.. code-block:: xml

    <pipe
      name           = "pipe1"
      start_position = "0  0  0"
      orientations   = "0  1  0"
      pipe_Dh        = "2.0"
      pipe_roughness = "1.0E-6"
      pipe_area      = "3.14"
      pipe_length    = "10.0"
      n_elems        = "5"
    />


.. code-block:: xml

    <pipe
      name           = "pipe1"
      start_position = "0  0  0"
      orientations   = "0  1  0"
      cell_roughness = "1.0E-6  1.0E-6  1.0E-6  1.0E-6  1.0E-6"
      cell_Dh        = "2.0  2.0  2.0  2.0  2.0"
      cell_area      = "3.0  3.1  3.2  3.3  3.4"
      cell_length    = "1.7  1.8  1.9  2.0  2.1"
      n_elems        = "5"
    />

当需要输入内部接管的信息时，可以指定内部接管的面积以及其形阻系数以及是否使用截面突阔突缩等特殊模型。
下面的输入例子展示了定义管道模型的内部接管信息：

.. code-block:: xml
    
    <pipe
      name           = "pipe1"
      start_position = "0  0  0"
      orientations   = "0  1  0"
      cell_roughness = "1.0E-6  1.0E-6  1.0E-6  1.0E-6  1.0E-6"
      cell_Dh        = "2.0  2.0  2.0  2.0  2.0"
      cell_area      = "3.0  3.1  3.2  3.3  3.4"
      cell_length    = "1.7  1.8  1.9  2.0  2.1"
      n_elems        = "5"
            
      junction_area  = "2.0 2.0 3.0 3.0"
      abrupt_area_change_junctions =  "1 2"
      F_convection_junctions       =  "2 3"
      R_convection_junctions       =  "2 3"
      F_friction_junctions         =  "2 3"
      R_friction_junctions         =  "2 3"
      DF = "1.0  1.0  1.0  1.0"
      DR = "1.0  1.0  1.0  1.0"
      AF = "0.0  0.0  1.0  1.0"
      BF = "0.0  0.0  0.0  0.0"
      CF = "0.0  0.0  0.0  0.0"
      AR = "0.0  0.0  1.0  1.0"
      BR = "0.0  0.0  0.0  0.0"
      CR = "0.0  0.0  0.0  0.0"
    />

上面的这个输入例子仅仅只是演示的作用。
在上面的输入中，定义了4个内部接管的面积，并且设定从入口开始算的前两个接管使用截面突然变化模型。
并且设定了内部接管的形阻系数。通常情况下，对于管型部件，只需要最简化的输入就可以满足需求了。

下面给出上面管型部件输入的每一项的意义：

关于控制体的输入：

- ``name`` : 管型部件的名称,在接管的连接中会使用
- ``start_position``:管型部件入口的起始位置
- ``orientations``  :管型部件的朝向
- ``cell_roughness``:定义管型部件每个控制体的粗超度，其与 ``pipe_roughness`` 只能输入其中一个。这是一个可选项，可以不输入。
- ``pipe_roughness``:定义管型部件的每个控制体均为该值，其与 ``cell_roughness`` 只能输入其中一个。这是一个可选项，可以不输入。
- ``cell_Dh``:定义管型部件每个控制体的水力直径均为该值。这是一个可选项，可以不输入。
- ``pipe_Dh``:定义管型部件每个控制体的水力直径均为该值。这是一个可选项，可以不输入。
- ``cell_length``:定义管型部件每个控制体的长度。
- ``pipe_length``:定义整个管型部件的长度，每个控制体长度等分。
- ``n_elems``    : 管型部件控制体的数目。

关于接管的输入，管型部件关于接管的输入均为可选项：

- ``junction_area``：接管的流动面积。
- ``abrupt_area_change_junctions`` :哪些接管使用截面突阔突缩模型
- ``F_convection_junctions``       :哪些接管入口侧不计算动量方程对流项
- ``R_convection_junctions``       :哪些接管出口侧不计算动量方程对流项
- ``F_friction_junctions``         :哪些接管入口侧不计算动量方程壁面摩擦项
- ``F_friction_junctions``         :哪些接管出口侧不计算动量方程壁面摩擦项
- ``DF``、``DR``                   :接管入口、出口侧控制体的等效长度
- ``AF、BF、CF``         :定义由接管入口流向接管出口时的形状阻力压降计算系数
- ``AR、BR、CR``         :定义由接管出口流向接管入口时的形状阻力压降计算系数


分支部件
=============
分支部件也是一个由单一控制体和接管组合而成的部件。
用于模拟管网中的分支结构，其可以看作是一个单一控制体和多个接管或者横流接管的组合。
分支部件通常会有多个接管与其入口或者出口相连。在有的情况下也会有横流接管与其侧面相连。
并且分支部件的入口或者出口也可能通过横流接管连接到其他控制体的侧面。

分支部件在输入文件中通过branch标签定义，下面是一个典型的分支部件的输入：

.. code-block:: xml
  
  <branch
    name      = "branch1"
    inputs    = "pipe1.in pipe2.out singleVolume1.in" 
    outputs   = "pipe3.in"
    lateral   = "singleVolume1.side"
    junction_number = "5"

    start_position = "0.0 0.0 0.0"
    length         = "1.00000"
    area           = "3.14159" 
    volume         = "3.14159"
    Dh             = "1.00000"
    roughness      = "1.0E-6"
    orientations   = "1  0  0"

    junction_area  = "2.0 2.0 3.0 3.0 2.0"
    abrupt_area_change_junctions = "1 2"
    AF = "0.0  0.0  1.0  1.0  1.0"
    AR = "0.0  0.0  1.0  1.0  1.0"
  />

在RESYS程序中，用于定义分支部件的类 ``branch`` 继承了用于定义单控制题的类 ``singleVolume``。
因为branch部件是单控制体和接管的组合，所以branch部件需要定义单控制体输入的数据以及接管连接的输入数据。
定义单控制体的输入数据，和前面所诉的相同。
对于连接的定义，则只需要输入和它相邻的控制体的连接面。
下面介绍branch部件的输入的每一项：

关于控制体的输入

- ``name``  :  分支部件的名称，这个会在接管的连接中用到，控制体的名称里面不能包含字符 ``.``
- ``start_position``  :  分支部件控制体入口的起始位置，三个坐标分量分别为x、y、z，单位(m)。与 ``singleVolume`` 部件相同。
- ``orientations``    :  分支部件控制体的朝向，定义为入口指向出口的方向向量。与 ``singleVolume`` 部件相同。
- ``area``            :  分支部件控制体的流动面积。与 ``singleVolume`` 部件相同。
- ``length``          ： 分支部件控制体的长度，单位(m) 。与 ``singleVolume`` 部件相同。
- ``volume``          ： 分支部件控制体的体积。与 ``singleVolume`` 部件相同。
- ``Dh``              ： 分支部件控制体的水力直径。与 ``singleVolume`` 部件相同。
- ``roughness``       ： 分支部件控制体的表面粗超度，单位(m)。与 ``singleVolume`` 部件相同。

关于接管的输入：

- ``junction_number`` :  总的接管的数目，该输入用于校核输入文件中定义该分支部件的接管总数是否与其一致。
- ``inputs``          :  通过接管相连，与分支部件控制体的入口相邻的控制体的面。
- ``outputs``         :  通过接管相连，与分支部件控制体的出口相邻的控制体的面。
- ``lateral``         :  通过接管相连，与分支控制体的侧面相邻的控制体的面。
- ``junction_area``   :  接管的面积，该项为必须输入项，其输入的接管顺序为通过 ``inputs`` 指定的接管、通过 ``outputs`` 指定的接管、``通过laterral`` 指定的接管。
- ``abrupt_area_change_junctions`` : 指定那些接管使用截面突阔突缩模型，其计数的次序和上面指定的接管面积的输入顺序相同。只有非横流接管才能使用该模型。
- ``AF``、``BF``、``CF``: 接管的顺流形阻系数，输入的顺序和前面的相同。 可选输入参数。 
- ``AR``、``BR``、``CR``: 接管的逆流形阻系数，输入的顺序和前面的相同。  可选输入参数。 
- ``DF``、``DR``        : 输入横流接管的等效长度，其接受一个与总接管数等长的数组。可选输入参数。 
- ``F_convection_junctions`` :哪些接管入口侧不计算动量方程对流项。可选输入参数。 
- ``R_convection_junctions`` :哪些接管出口侧不计算动量方程对流项。可选输入参数。 
- ``F_friction_junctions``    :哪些接管入口侧不计算动量方程壁面摩擦项。可选输入参数。 
- ``R_friction_junctions``   :哪些接管出口侧不计算动量方程壁面摩擦项。可选输入参数。 

.. note::

  ``DF`` 、``DR`` 是可选参数，当不输入时，程序会自动生成横流接管两端流道的等效长度，具体来说，对于连接到入口和出口那一端，使用连接的控制体的长度作为其等效长度，
  对于连接到控制体侧面那一端，使用连接的控制体的水力直径作为等效长度。这两个参数接受和总的接管等长度的数组。

.. caution::
  对于分支部件的内部接管，对于入口和侧面的的接管来说，其出口侧为分支部件控制体，对于出口的接管来说，其出口侧为于其相连的控制体。

  不能对横流接管指定截面突阔突缩模型，否则程序会输出提示信息。


分支控制体部件
=================
``分支控制体部件`` 是一个特殊的分支部件， 其由一个控制体和多个接管部件组成。
但是由于分支控制体特殊的物理意义，其用于模拟多个流动分支交汇于一个大的控制体内。
而对于该控制体内部的流动而言，没有主要的流动方向，因此，考虑其内部的流动摩擦压降通常是不方便的。
因此分支控制体部件不考虑其内部的流动信息，其是一个零维的模型。
由于在零维的模型上考虑摩擦压降是非常困难的，而且在较大的体积上流动摩擦压降是非常小的，因此其内部的摩擦压降被忽略掉。

对于分支控制体部件，并不需要控制体流动面积，只需要要体积信息以考虑能量守恒与质量守恒。
在输入文件中分支控制体使用 ``<volumeBranch/>`` 标签指定：

.. code-block:: xml

    <volumeBranch
      name = "volumebranch1"
      volume = "50"
      center = "10 10 10"
      
      junction_number = "3"
      inputs          = "singleVolume.in"
      outputs         = "pipe1.in pipe2.out"
      junction_area   = "2.0  2.0  2.0"
      AF = "1.0  1.0  1.0"
      AR = "1.0  1.0  1.0"
    />

对于分支控制体部件的输入，包括两个部分。
其中一个部分是关于控制体的输入：

- ``name``   : 控制体的名称。
- ``center`` : 控制体的中心位置。
- ``volume`` ：控制体的体积，单位 :math:`m^3`

另外一部分是关于接管的输入：

- ``junction_number``    : 总的接管的数目
- ``inputs``             : 流向为流入控制体的接管连接的控制体的面。
- ``output``             : 流向为流出控制体的接管连接的控制体的面。
- ``junction_area``      : 这些接管的流动面积。
- ``AF``、``BF``、``CF`` : 接管正向流动的形阻系数。可选输入参数。
- ``AR``、``BR``、``CR`` : 接管逆向流动的形阻系数。可选输入参数。
- ``DF``、``DR``         : 接管两端控制体的等效长度。可选输入参数。

.. note::

   对于分支控制体内部的接管，其出口和入口方向的控制体由 ``inputs`` 和 ``outputs`` 指定。

   对于分支控制体，其默认的等效长度的计算公式为： :math:`D = {V}^{-3}`。
   
   对于分支控制体内部的接管，其与内部控制体相连一侧不计算对流项与壁面摩擦。

   对于分支控制体内部的接管，默认不使用截面突阔，突缩模型。

时间相关控制体部件
===================

时间相关控制体部件是一个用于指定边界条件的部件。该部件是一个零维部件，其作用是给一个一维部件指定压力、温度边界条件。
由于其用于指定一个已知的边界，因此其并不会增加求解的方程的未知变量的个数。
时间相关控制体只能连接到管形部件、单一控制体的出口或者入口，不能连接到控制体的侧面。
当给单一控制体的出口或者入口指定一个时间相关控制体时，相当于在其出口和入口的边界出指定了一个存储边界信息的边界节点。
该节点的位置位于该出口或者入口。

下面是输入一个时间相关控制体的例子，时间相关控制体在程序中使用 ``<timeDependentVolume/>`` 指定 ：


.. code-block:: xml

  <timeDependentVolume
    name  = "boundary1"
    p_bc  = "1.0E5"
    T_bc  = "150"
  />

下面介绍时间相关控制体的输入

- ``name``  ：  时间相关控制体的名称
- ``p_bc``  :   压力边界条件，可以输入一个常数，或者与时间相关的函数
- ``T_bc``  :   温度边界条件，可以输入一个常数，或者与时间相关的函数

时间相关接管
===================
时间相关接管用于指定流速与流量边界条件。
时间相关接管在输入文件中使用 ``<timeDependentJunction>`` 来指定。
下面是一个时间相关接管的输入例子：

.. code-block:: xml

  <timeDependentJunction
    name     = "timeDependentJunction1"
    input    = "volume1.in"
    output   = "volume2.out"
    area     = "1.00"
    velocity = "10"
  />

- ``name``     ：时间相关接管的名称
- ``input``    : 时间相关接管的输入连接的控制体的面
- ``output``   : 时间相关接管的输出连接的控制体的面
- ``area``     : 时间相关接管的流动面积
- ``velocity`` : 速度边界条件，输入常数或者时间的函数
- ``massflux`` : 质量流密度边界条件，输入常数或时间的函数，其与速度边界条件输入其中之一，不能两者都输入。


